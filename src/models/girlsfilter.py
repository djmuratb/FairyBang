# -*- coding: utf-8 -*-
from sqlalchemy import Column, Integer, String, Enum, ForeignKey, ARRAY
from sqlalchemy.orm import relationship

from src.models.common import Base, engine, Common
from src.models.extra.enums import *


class GirlsFilter(Common):
    __tablename__ = 'girls_filter'

    id            = Column(Integer, primary_key=True)

    #       --- location ---
    country       = Column(String(30), name='–°—Ç—Ä–∞–Ω–∞', default='üá∑üá∫ –†–æ—Å—Å–∏—è', key='country')
    city          = Column(String(50), name='–ì–æ—Ä–æ–¥', default='–ú–æ—Å–∫–≤–∞', key='city')
    subway        = Column(String(50), name='–†–∞–π–æ–Ω', nullable=True, key='subway')

    #       --- appearance details ---
    age           = Column(ARRAY(Integer, as_tuple=True), name='–í–æ–∑—Ä–∞—Å—Ç', default=(18, 80), key='age')
    height        = Column(ARRAY(Integer, as_tuple=True), name='–†–æ—Å—Ç', default=(140, 200), key='height')
    chest         = Column(ARRAY(Integer, as_tuple=True), name='–ì—Ä—É–¥—å', default=(1, 12), key='chest')

    #       --- price ---
    price         = Column(ARRAY(Integer, as_tuple=True), name='–¶–µ–Ω–∞', default=(1_000, 20_000), key='price')

    #       --- relationship ---
    user_username   = Column(String(50), ForeignKey('user.username', ondelete='CASCADE'))
    user            = relationship('User', back_populates='girls_filter')

    def __init__(self):
        pass


class ExtendedGirlsFilter(Common):
    __tablename__ = 'extended_girls_filter'

    id                          = Column(Integer, primary_key=True)

    #       --- additional appearance ---
    category                    = Column(Enum(ExtCategory, values_callable=Common.values_callable, name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è'),
                                         name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è', default=ExtCategory.not_important.value, key='category')
    hair_color                  = Column(Enum(ExtHairColor, values_callable=Common.values_callable, name='–¶–≤–µ—Ç –≤–æ–ª–æ—Å'),
                                         name='–¶–≤–µ—Ç –≤–æ–ª–æ—Å', default=ExtHairColor.not_important.value, key='hair_color')
    body_type                   = Column(Enum(ExtBodyType, values_callable=Common.values_callable, name='–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ'),
                                         name='–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ', default=ExtBodyType.not_important.value, key='body_type')
    skin_color                  = Column(Enum(ExtSkinColor, values_callable=Common.values_callable, name='–¶–≤–µ—Ç –∫–æ–∂–∏'),
                                         name='–¶–≤–µ—Ç –∫–æ–∂–∏', default=ExtSkinColor.not_important.value, key='skin_color')
    nationality                 = Column(Enum(ExtNationality, values_callable=Common.values_callable,
                                              name='–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å'), name='–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å',
                                         default=ExtNationality.not_important.value, key='nationality')

    #       --- other ---
    smoking                     = Column(Enum(ExtSmoking, values_callable=Common.values_callable, name='–ö—É—Ä–µ–Ω–∏–µ'),
                                         name='–ö—É—Ä–µ–Ω–∏–µ', default=ExtSmoking.not_important.value, key='smoking')
    girl_friends                = Column(Enum(ExtGirlFriends, values_callable=Common.values_callable, name='–ü–æ–¥—Ä—É–∂–∫–∏'),
                                         name='–ü–æ–¥—Ä—É–∂–∫–∏', default=ExtGirlFriends.not_important.value, key='girl_friends')

    #       --- prices ---
    app_one_hour                = Column(ARRAY(Integer, as_tuple=True), name='–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã 1 —á–∞—Å', key='app_one_hour')
    app_two_hours               = Column(ARRAY(Integer, as_tuple=True), name='–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã 2 —á–∞—Å–∞', key='app_two_hours')
    departure_to_you            = Column(ARRAY(Integer, as_tuple=True), name='–í—ã–µ–∑–¥ –∫ –í–∞–º', key='departure_to_you')
    departure_to_you_night      = Column(ARRAY(Integer, as_tuple=True), name='–í—ã–µ–∑–¥ –∫ –í–∞–º –Ω–∞ –Ω–æ—á—å', key='departure_to_you_night')

    #       --- relationship ---
    user_username   = Column(String(50), ForeignKey('user.username', ondelete='CASCADE'))
    user            = relationship('User', back_populates='extended_girls_filter')
    
    def __init__(self):
        pass


Base.metadata.create_all(engine)
